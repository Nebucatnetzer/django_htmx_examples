[tool.pylint]
max-line-length = 88
load-plugins = [
    "pylint_django",
]
good-names = [
    "pk",
    "ip",
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "too-many-ancestors",
]

[tool.poetry]
name = "django-htmx-examples"
version = "0.1.0"
description = "A collection of HTMX examples combinded with django."
authors = ["Andreas Zweili <andreas@zweili.ch>"]
license = "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"
readme = "README.md"
packages = [{include = "src"}]

[tool.mypy]
exclude = [
    "tests/",
]
plugins = ["mypy_django_plugin.main"]
mypy_path = "./src"
# Start off with these
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

# Getting these passing should be easy
strict_equality = true

# Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

# These shouldn't be too much additional work, but may be tricky to
# get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

# These next few are various gradations of forcing use of type annotations
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true

# This one isn't too hard to get passing, but return on investment is lower
no_implicit_reexport = true

# This one can be tricky to get passing if you use a lot of untyped libraries
warn_return_any = true

[tool.django-stubs]
django_settings_module = "htmx_examples"

[tool.poetry.group.main.dependencies]
python = "^3.10"
django = "^4.2.16"
django-htmx = "^1.16.0"
gunicorn = "^21.2.0"
psycopg2-binary = "^2.9.6"

[tool.poetry.group.dev.dependencies]
pylint = "^2.17.4"
mypy = "^1.4.1"
python-lsp-server = "^1.7.4"
black = "^23.7.0"
django-stubs = "^4.2.3"
pylint-django = "^2.5.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
